continue
exit
init_user_song_id
partner_user_song_id
continue
exit
yes
y
exit
init_user_song_id
conversation.partner_user_song.user_id
partner_user_song_id
 partner_user_song_id
next
exit
@song.length
next
exit
next
exit
next
@song.length
exit
 Time.now.utc - @conversation.exp_time
continue
exit
@new_songs
continue
@new_songs = Song.where("conversation_id = ? && user_id = ? && status = ?", params[:id], current_user.id, '2').order("id ASC")
continue
@new_songs = Song.where("conversation_id = ? && user_id = ? && status = ?", params[:id], current_user.id, '2').order("id ASC")
exit
@new_songs = Song.where("conversation_id = ? && user_id = ? && status = ?", params[:id], current_user.id, '2').order("id ASC")
exit
next
continue
exit
new_songs.length
new_songs.count
next
continue
exit
Song.where("conversation_id = ? && user_id = ? && status = ?", params[:id], current_user.id, '2')
Song.where("conversation_id = ? && user_id = ? && status =", params[:id], current_user.id, '2')
Song.where("conversation_id = ? && user_id = ? && sttus =", params[:id], current_user.id, '2')
Song.where("conversation_id = ? && user_id = ? && sttus =", params[:id], current_user.id, '2').order("id ASC")
continue
exit
next
ex
exit
next
continue
next
continue
exit
continue
exit
next
continue
next
continue
exit
next
conversation
exit
resul_respon
exit
next
@results
exit
ret
exit
ret
exit
data_duration.to_time.iso8601
data_duration.to_time
data_duration.to_time.iso8601
Time.parse(data_duration)
data_duration
Datetime.new(data_duration)
Datetime.parse(data_duration)
Datetime.Parse(data_duration)
Datetime.Parset(data_duration)
Datetime.parset(data_duration)
Time.at(data_duration)
Time.parse(data_duration).utc
Time.parse(data_duration)
Time(data_duration)
data_duration
exit
data_duration
Time.at(data_duration)
Time.at(data_duration).to_datetime
Time.parse(data_duration).to_datetime
Time.parse(data_duration)
ime.parse(data_duration)
data_duration
time_duration
data_duration
time_duration
time_duration.seconds_since_midnight
exit
data_json
exit
raise(exception)
next
yes
next
parner_songs
next
exit
next
exit
Ä‘
exit
nex
next
exit
next
exit
next
exit
next
exit
continue
next
exit
partner_user_song
init_user_song
next
exit
next
init_user_song
next
exit
current_user.id
next
init_user_song
partner_user_song
next
exit
current_user.id
init_user_song
partner_user_song
next
exit
next
exit
next
exit
continue
exit
next
exit
exsit
next
continue
exit
next
bext
next
